{"version":3,"sources":["images/IdCard.png","images/dp.jpg","images/shapes.png","images/tb-bg.jpg","images/tb-bg2.png","images/tb-fg.png","components/Navbar.js","components/PHome.js","App.js","serviceWorker.js","index.js","images sync /^/.*$"],"names":["module","exports","__webpack_require__","p","NavButton","_ref","name","onClick","color","variant","react_default","a","createElement","Button_default","key","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","className","AppBar_default","Object","defineProperty","position","Toolbar_default","Typography_default","rightButtons","map","url","arguments","length","undefined","concat","require","PHome","goTo","offset","_this","parallax","scrollTo","_this2","this","addons","ref","pages","speed","style","src","left","right","top","bottom","zindex","paragraph","gutterBottom","id","factor","background","Navbar","title","Component","App","PHome_PHome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./IdCard.png","./dp.jpg","./shapes.png","./tb-bg.jpg","./tb-bg2.png","./tb-fg.png","webpackContext","req","webpackContextResolve","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.a5421c44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IdCard.813647e5.png\";","module.exports = __webpack_public_path__ + \"static/media/dp.f56ec440.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shapes.412e4eb5.png\";","module.exports = __webpack_public_path__ + \"static/media/tb-bg.f24f48b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tb-bg2.4418cc10.png\";","module.exports = __webpack_public_path__ + \"static/media/tb-fg.0edc582f.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\n\r\nfunction NavButton({name, onClick, color, variant}) {\r\n    return (\r\n        <Button key={name} onClick={onClick} color={color || 'inherit'} >{name}</Button>\r\n    )\r\n}\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" position=\"sticky\">\r\n        <Toolbar>\r\n          {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Shubham vyas\r\n          </Typography>\r\n          {props.rightButtons.map(NavButton)}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);\r\n","import { Parallax, ParallaxLayer } from 'react-spring/dist/addons';\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst url = (name, wrap = false) => {\r\n  if (wrap) {\r\n    return `url('${require(`../images/${name}`)}`\r\n  }\r\n  return require(`../images/${name}`);\r\n}\r\nconst Background = ({ children, style }) => <div style={{}}>{children}</div>\r\n\r\nexport default class PHome extends Component {\r\n\r\n  goTo = (offset) => this.parallax.scrollTo(offset);\r\n\r\n  render() {\r\n    return (\r\n      <Parallax ref={ref => (this.parallax = ref)} pages={4}>\r\n\r\n        {/* Page 3 */}\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={0.3}\r\n          style={{}}\r\n        >\r\n          <img className=\"parallax-image\" src={url('tb-bg.jpg')}/>\r\n        </ParallaxLayer>\r\n\r\n\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={-0}\r\n          style={{}}\r\n        >\r\n          <img className=\"parallax-image\"  src={url('tb-fg.png')}/>\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={1.5}\r\n          className=\"margin-for-effect\"\r\n        >\r\n          <h1 style={{color:'#fff'}} className=\"designation margin-effect\">\r\n            I am from Hyderabad.<br />\r\n            The City of Nizams <br />\r\n            and Biryani.\r\n          </h1>\r\n        </ParallaxLayer>\r\n\r\n\r\n        {/* Page 3 */}\r\n        <ParallaxLayer\r\n          offset={1}\r\n          style={{}}\r\n        >\r\n          \r\n        </ParallaxLayer>\r\n\r\n\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0.5}\r\n          style={{ position: 'absolute', left: 0, right: 0, top: 200, bottom: 0, zindex: 1 }}>\r\n          <img src={url('shapes.png')} className=\"shapes\" />\r\n        </ParallaxLayer>\r\n\r\n        {/* Page 1 */}\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0.5}\r\n          className=\"page-1\"\r\n        >\r\n\r\n          <ParallaxLayer\r\n            offset={0}\r\n            speed={0.4}\r\n          >\r\n            <img src={url('IdCard.png')} className=\"idCard\" />\r\n          </ParallaxLayer>\r\n\r\n\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0.3}\r\n        >\r\n          <div className=\"home-content-wrap\">\r\n            <img className=\"dp\" src={url('dp.jpg')} />\r\n            <h1 className=\"name-heading\">Shubham vyas</h1>\r\n            <h1 className=\"designation\">Front-end Developer</h1>\r\n            <Typography variant=\"h5\" classes=\"lead\" paragraph={true} gutterBottom>Hi. I produce elegant, performant, and accessible digital experiences. <br />Currently working at Froogal, India.</Typography>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => this.goTo(1)} style={{marginRight:10}}>\r\n              Know More\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Contact\r\n            </Button>\r\n          </div>\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          id=\"Nav\"\r\n          offset={0}\r\n          speed={0.3}\r\n          factor={0}\r\n          style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: `calc(100vh - 50vh)`, background:'red' }}\r\n        >\r\n          <Navbar\r\n            title=\"Shubham\"\r\n            rightButtons={[\r\n              { name: 'Home', onClick: () => this.goTo(0.09) },\r\n              { name: 'About', onClick: () => this.goTo(1), color: 'secondary', }\r\n            ]}\r\n          />\r\n        </ParallaxLayer>\r\n\r\n      </Parallax>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport PHome from './components/PHome';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <PHome />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./IdCard.png\": 164,\n\t\"./dp.jpg\": 165,\n\t\"./shapes.png\": 166,\n\t\"./tb-bg.jpg\": 167,\n\t\"./tb-bg2.png\": 168,\n\t\"./tb-fg.png\": 169\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;"],"sourceRoot":""}